Executor Service:
================

	Esta interface nos permite representar un mecanismo de ejecucion asincrona, la cual es capaz de ejecutar tareas en background. Un Executor Service es asi, muy similar a un Thread Pool. De hecho
	la implementacion de ExecutorService presente en el paquete java.util.concurrent es una implementacion Thread Pool.
	
	Existen varias implementaciones del Executor Service, por ejemplo:
	
		ThreadPoolExecutor
		ScheduledThreadPoolExecutor
	
	Varias de ellas pueden ser creadas mediante el factory method de la interfaz Executors, por ejemplo:
	
		ExecutorService executorService1 = Executors.newSingleThreadExecutor();
	
		ExecutorService executorService2 = Executors.newFixedThreadPool(10);
	
		ExecutorService executorService3 = Executors.newScheduledThreadPool(10);
	
	SingleThreadExecutor:
	--------------------
	
		
	
	
	FixedThreadPool:
	---------------
	
		
		
		
	
	ScheduledThreadPool:
	-------------------
	
	
	Ejemplos:
	
		En el ejemplo02 se muestra como crea un ExecutorService de forma directa.
	



URLs:
----
	[1] https://zeroturnaround.com/rebellabs/fixedthreadpool-cachedthreadpool-or-forkjoinpool-picking-correct-java-executors-for-background-tasks/
	[2] https://blogs.perficient.com/2015/01/23/increasing-efficiency-with-java-executors-and-thread-pools-2/
	